// src/lib/useCustomerData.ts
// Custom Hook ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏° Cache

import useSWR from 'swr';
import { useEffect, useState } from 'react';

const GOOGLE_SHEET_API_URL = 'https://script.google.com/macros/s/AKfycbxN9rG3NhDyhlXVKgNndNcJ6kHopPaf5GRma_dRYjtP64svMYUFCSALwTEX4mYCHoDd6g/exec?getAll=1';
const CACHE_KEY = 'customer_data_cache';
const CACHE_TIMESTAMP_KEY = 'customer_data_cache_timestamp';
const CACHE_DURATION = 5 * 60 * 1000; // 5 ‡∏ô‡∏≤‡∏ó‡∏µ

interface RawCustomerDataItem {
  '‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ'?: string;
  '‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠ / ‡∏£‡∏∏‡πà‡∏ô'?: string;
  '‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'?: string;
  '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠'?: string | number;
  '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡∏†‡∏≤‡∏©‡∏µ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î'?: string;
  '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'?: string;
  '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô'?: string;
  '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏'?: string;
}

export interface CustomerData {
  licensePlate: string;
  brand?: string;
  customerName: string;
  phone: string;
  registerDate: string;
  status: string;
  note?: string;
  userId?: string;
  day?: number;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô fetcher ‡∏ó‡∏µ‡πà‡∏°‡∏µ localStorage cache
const fetcherWithCache = async (url: string) => {
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö cache ‡πÉ‡∏ô localStorage ‡∏Å‡πà‡∏≠‡∏ô
  if (typeof window !== 'undefined') {
    const cached = localStorage.getItem(CACHE_KEY);
    const timestamp = localStorage.getItem(CACHE_TIMESTAMP_KEY);
    
    if (cached && timestamp) {
      const age = Date.now() - parseInt(timestamp);
      if (age < CACHE_DURATION) {
        console.log('‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å localStorage cache (‡∏≠‡∏≤‡∏¢‡∏∏:', Math.round(age / 1000), '‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)');
        return JSON.parse(cached);
      } else {
        console.log('‚è∞ Cache ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà...');
      }
    }
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API
  console.log('üåê ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets...');
  const response = await fetch(url);
  const data = await response.json();

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á localStorage
  if (typeof window !== 'undefined' && data) {
    localStorage.setItem(CACHE_KEY, JSON.stringify(data));
    localStorage.setItem(CACHE_TIMESTAMP_KEY, Date.now().toString());
    console.log('üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á cache ‡πÅ‡∏•‡πâ‡∏ß');
  }

  return data;
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö‡πÄ‡∏õ‡πá‡∏ô CustomerData
export function formatCustomerData(item: RawCustomerDataItem): CustomerData {
  const dtField: string = item['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡∏†‡∏≤‡∏©‡∏µ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î'] || '';
  
  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
  let registerDate = '';
  if (dtField) {
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô ISO format (YYYY-MM-DDTHH:mm:ss)
    if (dtField.includes('T')) {
      registerDate = dtField.split('T')[0];
    }
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô DD/MM/YYYY ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
    else if (/^\d{2}\/\d{2}\/\d{4}$/.test(dtField)) {
      registerDate = dtField;
    }
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô YYYY-MM-DD
    else if (/^\d{4}-\d{2}-\d{2}$/.test(dtField)) {
      registerDate = dtField;
    }
    // ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°
    else {
      registerDate = dtField;
    }
  }
  
  const rawPhone: string = (item['‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠'] || '').toString();
  const phone: string = rawPhone.startsWith('0') || rawPhone.length === 0 ? rawPhone : `0${rawPhone}`;
  
  return {
    licensePlate: item['‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ'] || '',
    brand: item['‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠ / ‡∏£‡∏∏‡πà‡∏ô'] || '',
    customerName: item['‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'] || '',
    phone,
    registerDate,
    status: item['‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'] || item['‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô'] || '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
    note: item['‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏'] || '',
  };
}

// Custom Hook ‡∏´‡∏•‡∏±‡∏Å
export function useCustomerData() {
  const [formattedData, setFormattedData] = useState<CustomerData[]>([]);
  
  const { data: swrData, error: swrError, mutate, isLoading } = useSWR(
    GOOGLE_SHEET_API_URL,
    fetcherWithCache,
    {
      revalidateOnFocus: false,
      revalidateOnReconnect: false,
      dedupingInterval: 10000, // ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡∏ã‡πâ‡∏≥‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
      revalidateIfStale: false, // ‡πÑ‡∏°‡πà revalidate ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏±‡∏á fresh
      revalidateOnMount: true,
      focusThrottleInterval: 30000, // throttle focus revalidation
    }
  );

  useEffect(() => {
    if (swrData && swrData.data) {
      const formatted: CustomerData[] = (swrData.data || []).map((item: RawCustomerDataItem) => 
        formatCustomerData(item)
      );
      
      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏™‡∏∏‡∏î (reverse order)
      const reversedData = formatted.reverse();
      setFormattedData(reversedData);
    }
  }, [swrData]);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö clear cache
  const clearCache = () => {
    if (typeof window !== 'undefined') {
      localStorage.removeItem(CACHE_KEY);
      localStorage.removeItem(CACHE_TIMESTAMP_KEY);
      console.log('üóëÔ∏è ‡∏•‡πâ‡∏≤‡∏á cache ‡πÅ‡∏•‡πâ‡∏ß');
    }
    mutate(); // Revalidate ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö refresh ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const refreshData = async () => {
    clearCache();
    await mutate();
  };

  return {
    data: formattedData,
    rawData: swrData,
    error: swrError,
    isLoading,
    mutate,
    clearCache,
    refreshData,
  };
}

// Export API URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô forms
export { GOOGLE_SHEET_API_URL };


