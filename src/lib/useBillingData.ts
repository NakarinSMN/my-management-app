// src/lib/useBillingData.ts
// Custom Hook ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏° Cache

import useSWR from 'swr';
import { useEffect, useState } from 'react';

const GOOGLE_SHEET_API_URL = 'https://script.google.com/macros/s/AKfycbxN9rG3NhDyhlXVKgNndNcJ6kHopPaf5GRma_dRYjtP64svMYUFCSALwTEX4mYCHoDd6g/exec';
const CACHE_KEY = 'billing_data_cache';
const CACHE_TIMESTAMP_KEY = 'billing_data_cache_timestamp';
const CACHE_DURATION = 5 * 60 * 1000; // 5 ‡∏ô‡∏≤‡∏ó‡∏µ

// Interface ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•
export interface BillingData {
  billNumber: string;
  customerName: string;
  service: string;
  category: string;
  price: number;
  date: string;
  phone: string;
  status: string;
  items?: string; // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (JSON string)
  totalAmount?: number; // ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏ß‡∏°
}

interface RawBillingDataItem {
  '‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏¥‡∏•'?: string;
  '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'?: string;
  '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£'?: string;
  '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà'?: string;
  '‡∏£‡∏≤‡∏Ñ‡∏≤'?: string | number;
  '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'?: string;
  '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠'?: string | number;
  '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'?: string;
  '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô'?: string;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô fetcher ‡∏ó‡∏µ‡πà‡∏°‡∏µ localStorage cache
const fetcherWithCache = async (url: string) => {
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö cache ‡πÉ‡∏ô localStorage ‡∏Å‡πà‡∏≠‡∏ô
  if (typeof window !== 'undefined') {
    const cached = localStorage.getItem(CACHE_KEY);
    const timestamp = localStorage.getItem(CACHE_TIMESTAMP_KEY);
    
    if (cached && timestamp) {
      const age = Date.now() - parseInt(timestamp);
      if (age < CACHE_DURATION) {
        console.log('‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•‡∏à‡∏≤‡∏Å localStorage cache (‡∏≠‡∏≤‡∏¢‡∏∏:', Math.round(age / 1000), '‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)');
        return JSON.parse(cached);
      } else {
        console.log('‚è∞ Cache ‡∏ö‡∏¥‡∏•‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà...');
      }
    }
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API
  console.log('üåê ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•‡∏à‡∏≤‡∏Å Google Sheets...');
  const response = await fetch(`${url}?getBills=1`);
  const data = await response.json();

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á localStorage
  if (typeof window !== 'undefined' && data) {
    localStorage.setItem(CACHE_KEY, JSON.stringify(data));
    localStorage.setItem(CACHE_TIMESTAMP_KEY, Date.now().toString());
    console.log('üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•‡∏•‡∏á cache ‡πÅ‡∏•‡πâ‡∏ß');
  }

  return data;
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö‡πÄ‡∏õ‡πá‡∏ô BillingData
export function formatBillingData(item: RawBillingDataItem): BillingData {
  // ‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
  let price = 0;
  if (typeof item['‡∏£‡∏≤‡∏Ñ‡∏≤'] === 'number') {
    price = item['‡∏£‡∏≤‡∏Ñ‡∏≤'];
  } else if (typeof item['‡∏£‡∏≤‡∏Ñ‡∏≤'] === 'string') {
    price = parseFloat(item['‡∏£‡∏≤‡∏Ñ‡∏≤'].replace(/[^0-9.-]/g, '')) || 0;
  }

  // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
  const rawPhone: string = (item['‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠'] || '').toString();
  const phone: string = rawPhone.startsWith('0') || rawPhone.length === 0 ? rawPhone : `0${rawPhone}`;

  // ‡πÅ‡∏õ‡∏•‡∏á JSON ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô
  let items = '';
  let totalAmount = price;
  
  if (item['‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô']) {
    try {
      const parsed = JSON.parse(item['‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô']);
      items = item['‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô'];
      totalAmount = parsed.totalAmount || price;
    } catch {
      items = item['‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô'];
    }
  }
  
  return {
    billNumber: item['‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏¥‡∏•'] || '',
    customerName: item['‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'] || '',
    service: item['‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£'] || '',
    category: item['‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà'] || '',
    price,
    date: item['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'] || '',
    phone,
    status: item['‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'] || '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
    items,
    totalAmount,
  };
}

// Custom Hook ‡∏´‡∏•‡∏±‡∏Å
export function useBillingData() {
  const [formattedData, setFormattedData] = useState<BillingData[]>([]);
  
  const { data: swrData, error: swrError, mutate, isLoading } = useSWR(
    GOOGLE_SHEET_API_URL,
    fetcherWithCache,
    {
      revalidateOnFocus: false,
      revalidateOnReconnect: false,
      dedupingInterval: 10000,
      revalidateIfStale: false,
      revalidateOnMount: true,
      focusThrottleInterval: 30000,
    }
  );

  useEffect(() => {
    if (swrData && swrData.data) {
      const formatted: BillingData[] = (swrData.data || []).map((item: RawBillingDataItem) => 
        formatBillingData(item)
      );
      
      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏™‡∏∏‡∏î
      const reversedData = formatted.reverse();
      setFormattedData(reversedData);
    }
  }, [swrData]);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö clear cache
  const clearCache = () => {
    if (typeof window !== 'undefined') {
      localStorage.removeItem(CACHE_KEY);
      localStorage.removeItem(CACHE_TIMESTAMP_KEY);
      console.log('üóëÔ∏è ‡∏•‡πâ‡∏≤‡∏á cache ‡∏ö‡∏¥‡∏•‡πÅ‡∏•‡πâ‡∏ß');
    }
    mutate();
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö refresh ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const refreshData = async () => {
    clearCache();
    await mutate();
  };

  return {
    data: formattedData,
    rawData: swrData,
    error: swrError,
    isLoading,
    mutate,
    clearCache,
    refreshData,
  };
}

// Export API URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô forms
export { GOOGLE_SHEET_API_URL };


