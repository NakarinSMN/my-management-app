// ========================================
// Google Apps Script - LINE Notify System
// ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô LINE
// ========================================

// ========== CONFIG ==========
const SHEET_ID = "110t2LJA96E0eZRTj40kgW0_X50v7dUkt-oTR1SA13wU";
const ACCESS_TOKEN = '7yh7P8dfolfTAe4YxovRpmFtC7gOtU3zRA/lAQZce2QAIxj3r4rDElMrFc85vv0CMNWiksyJeY/cG6WLpLmD4cKxWYTK1TDzn2IjBqofgdm4G8oTtOn/VOjWJQ+KNg3H7glWWoL6rLGDv70xlveeewdB04t89/1O/w1cDnyilFU';
const SHEET_NAME_FILTER = "sentnotify";
const SHEET_NAME_DATA = "data";

// ========== HELPER FUNCTIONS ==========

/**
 * ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö DD/MM/YYYY
 */
function formatDate(cell) {
  if (Object.prototype.toString.call(cell) === '[object Date]' && !isNaN(cell)) {
    return Utilities.formatDate(cell, "Asia/Bangkok", "dd/MM/yyyy");
  }
  return cell;
}

// ========== LINE NOTIFY FUNCTIONS ==========

/**
 * ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô LINE Bot
 */
function sendLineMessage(token, recipientId, text) {
  const payload = JSON.stringify({
    to: recipientId,
    messages: [{ type: 'text', text }]
  });

  const options = {
    method: 'post',
    contentType: 'application/json',
    headers: {
      Authorization: 'Bearer ' + token
    },
    payload
  };

  try {
    UrlFetchApp.fetch('https://api.line.me/v2/bot/message/push', options);
    console.log('‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° LINE ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    return true;
  } catch (error) {
    console.error('‚ùå Error sending LINE message:', error);
    return false;
  }
}

/**
 * ‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
 */
function getNotifyStatus(sheet, licensePlate) {
  const data = sheet.getRange("A2:L" + sheet.getLastRow()).getValues();
  for (let i = 0; i < data.length; i++) {
    if (data[i][1] === licensePlate) { // B - ‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ
      return data[i][11]; // L = ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    }
  }
  return "";
}

/**
 * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
 */
function updateNotifyStatus(sheet, licensePlate, newStatus) {
  const data = sheet.getRange("A2:L" + sheet.getLastRow()).getValues();
  for (let i = 0; i < data.length; i++) {
    if (data[i][1] === licensePlate) {
      sheet.getRange(i + 2, 12).setValue(newStatus); // L = ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 12
      break;
    }
  }
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î
 */
function sendAlert() {
  const filterSheet = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME_FILTER);
  const dataSheet = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME_DATA);
  const filterLastRow = filterSheet.getLastRow();

  if (filterLastRow < 2) {
    Logger.log("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô");
    return;
  }

  const filterValues = filterSheet.getRange("B2:L" + filterLastRow).getValues();
  let sentCount = 0;

  filterValues.forEach((row) => {
    const licensePlate = row[1]; // B - ‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ
    const lastPaidDate = row[5]; // F
    const nextDueDate = row[9];  // J
    const userId = row[7];       // H
    const status = row[10];      // K

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô‡∏ä‡∏µ‡∏ï data (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå L)
    const notifyStatus = getNotifyStatus(dataSheet, licensePlate);
    if (notifyStatus === "‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß") {
      Logger.log(`‡∏Ç‡πâ‡∏≤‡∏° ${licensePlate} (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß)`);
      return;
    }

    if (userId && status === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î") {
      const message = `‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡πÉ‡∏Å‡∏•‡πâ‡∏ñ‡∏∂‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏µ‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå/‡∏£‡∏ñ‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÅ‡∏•‡πâ‡∏ß!\n\n` +
        `‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô: ${licensePlate}\n` +
        `‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î: ${formatDate(nextDueDate)}\n\n` +
        `‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏µ‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏î‡πâ 3 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô`;

      const sent = sendLineMessage(ACCESS_TOKEN, userId, message);
      
      if (sent) {
        updateNotifyStatus(dataSheet, licensePlate, "‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß");
        Logger.log(`‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß: ${licensePlate} ‚Üí ${userId}`);
        sentCount++;
      }
    }
  });
  
  Logger.log(`‚úÖ ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${sentCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
  return sentCount;
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
 */
function checkAndNotifyTaxExpiry() {
  try {
    const dataSheet = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME_DATA);
    const data = dataSheet.getDataRange().getValues();
    
    if (data.length <= 1) {
      console.log('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤');
      return 0;
    }
    
    const headers = data[0];
    const rows = data.slice(1);
    let notificationCount = 0;
    
    rows.forEach((row, index) => {
      const licensePlate = row[1]; // B: ‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ
      const customerName = row[3]; // D: ‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
      const userId = row[7]; // H: userId
      const status = row[10]; // K: ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
      const notifyStatus = row[11]; // L: ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
      if ((status === '‡πÉ‡∏Å‡∏•‡πâ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î' || status === '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î') && 
          userId && 
          notifyStatus !== '‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß') {
        
        const message = `üöó ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏µ\n` +
                       `‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ: ${licensePlate}\n` +
                       `‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ${customerName}\n` +
                       `‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${status}\n` +
                       `‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏µ`;
        
        const sent = sendLineMessage(ACCESS_TOKEN, userId, message);
        
        if (sent) {
          // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå L
          dataSheet.getRange(index + 2, 12).setValue('‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß');
          notificationCount++;
        }
      }
    });
    
    console.log(`‚úÖ ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${notificationCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    return notificationCount;
  } catch (error) {
    console.error('Error checking and notifying:', error);
    return 0;
  }
}

/**
 * ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà)
 */
function resetAllNotifyStatus() {
  try {
    const dataSheet = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME_DATA);
    const lastRow = dataSheet.getLastRow();
    
    if (lastRow > 1) {
      // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå L (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô) ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      dataSheet.getRange(2, 12, lastRow - 1, 1).clearContent();
      console.log(`‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${lastRow - 1} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    }
  } catch (error) {
    console.error('Error resetting notify status:', error);
  }
}

/**
 * ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° LINE
 */
function testSendLineMessage() {
  const testUserId = 'YOUR_TEST_USER_ID'; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô User ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
  const testMessage = 'üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å Google Apps Script\n‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤';
  
  const result = sendLineMessage(ACCESS_TOKEN, testUserId, testMessage);
  
  if (result) {
    console.log('‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
  } else {
    console.log('‚ùå ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
  }
}

// ========== TESTING ==========

/**
 * ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
 */
function testNotificationSystem() {
  console.log('=== ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ===');
  
  // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ sendAlert() (‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å sentnotify sheet)
  console.log('1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö sendAlert():');
  sendAlert();
  
  // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏ä‡πâ checkAndNotifyTaxExpiry() (‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å data sheet)
  console.log('2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö checkAndNotifyTaxExpiry():');
  const count = checkAndNotifyTaxExpiry();
  console.log(`‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
}

/**
 * ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Time-based Trigger (‡∏£‡∏±‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô)
 * ‡∏£‡∏±‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á trigger
 */
function setupDailyTrigger() {
  // ‡∏•‡∏ö trigger ‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  const triggers = ScriptApp.getProjectTriggers();
  triggers.forEach(trigger => {
    if (trigger.getHandlerFunction() === 'sendAlert') {
      ScriptApp.deleteTrigger(trigger);
    }
  });
  
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á trigger ‡πÉ‡∏´‡∏°‡πà (‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 9:00)
  ScriptApp.newTrigger('sendAlert')
    .timeBased()
    .atHour(9)
    .everyDays(1)
    .create();
  
  console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Daily Trigger ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 9:00)');
}


